{"filter":false,"title":"gruntfile.ls","tooltip":"/gruntfile.ls","undoManager":{"mark":6,"position":6,"stack":[[{"start":{"row":0,"column":0},"end":{"row":301,"column":0},"action":"remove","lines":["module.exports = (grunt)->","  files = ","    require \\./.compiled/app-structure.json","  make-pair = (mask-from, mask-to) ->","    make-pair = (source)->","      \".compiled/#{source.replace mask-from, mask-to}\" : source","    files.filter(-> it.index-of(mask-from) > -1).map make-pair","  key = (o)->","      Object.keys(o).0","  require(\\time-grunt) grunt","  load-module-first = (x)->","      | Object.keys(x).0.index-of('module') > -1 => -1","      | _ => 0","  separate = (arr, return-mods)->","       arr.filter(-> (Object.keys(it).0.index-of(\\module) >  -1) is return-mods)","  live = ","      make-pair(\\.ls,\\.js)","  live-modules = ","      separate live, yes","  live-other =","      separate live, no","  coffee = ","      make-pair(\\.coffee,\\.js)","  ts = ","      make-pair(\\.ts,\\.js)","  coffee-modules = ","      separate coffee, yes","  coffee-other =","      separate coffee, no","  ","  ts-modules = ","      separate ts, yes","  ts-other =","      separate ts, no","  ","  ","  files = ","    live: live-modules ++ live-other","    coffee: coffee-modules ++ coffee-other","    ts: ts-modules ++  ts-other","    jade: make-pair \\.jade, \\.html","    sass: make-pair \\.sass, \\.css","     ","  path = do","    js = -> \"client/js/#it\"","    app: js \\app.js","    app-style: \\.compiled/app/index.css","    app-module: \\.compiled/app/index.js","    templates: js \\app_templates.js","  grunt.init-config do","    sass:","      no_options:","        files:","          files.sass","    jade:","      html:","        files: files.jade","        options:","          client: no","          wrap: no","          node: no","          runtime: no","    ngAnnotate:","      options:","         single-quotes: yes","      app1:","         files: files.live.map(key).filter(-> it.index-of(\\client.js) > -1).map(-> \"#it\": [it])","    ngtemplates:","      app:","        src: files.jade.map(key).filter(-> it.index-of(\\app/index) is -1)","        dest: path.templates","        options:","          url: (url) ->","            url.replace \\.html, ''","               .replace /.+\\//i, ''","          bootstrap: (module, script)->","            \"angular.module('app').run(['$templateCache',function($templateCache) { #{script} }])\"","    ts:","       options:","        bare: yes","       src: files.ts","    livescript:","       options:","        bare: yes","       src:","        files: files.live","    coffee:","       options:","        bare: yes","       src:","        files: files.coffee","    bower:","      install: {}","    bower_concat:","      all:","        dest: \\lib/_bower.js","        cssDest: \\lib/_bower.css","        dependencies: {}","        bowerOptions:","          relative: false","    concat:","      basic:","        src: ","            staf =","                * \\lib/_bower.js","                * path.app-module","                * \\.compiled/xonom.service.js","                * path.templates","            temp =","                * \\.compiled/app/components/terminal/1.term.client.js","                ...","            lives =","                files.live.map(key).filter(-> it.index-of(\\client.js) > -1)","            coffees =","                files.coffee.map(key).filter(-> it.index-of(\\client.js) > -1)","            staf ++ temp ++ lives ++ coffees","        dest: path.app","        options:","          banner: \"(function( window ){ \\n 'use strict';\"","          footer: \"}( window ));\"","      extra:","        src: do","          const bower = ","            * \\lib/_bower.css","            ...","          const app = ","            files.sass.map(key)","          bower ++ app","        dest: \\client/css/app.css","    min :","      dist : ","        src : [\\client/js/app.js]","        dest: \\client/js/app.js","    copy:","      main:","        files:","          * expand: no","            src: [\\.compiled/app/index.html]","            dest: \\client/index.html","          * expand: yes","            cwd: ''","            src: \\app/components/**/*.js","            dest: \\.compiled","            flatten: no","            filter: \\isFile","          ...","    removelogging:","      dist:","        src: \"js/application.js\"","        dest: \"js/application-clean.js\"","    watch:","      scripts:","        files: ","          * \\app/**/*.*","          ...","        tasks: ","           * \\newer:sass","           * \\newer:jade","           * \\newer:livescript","           * \\newer:coffee","           * \\xonom","           * \\ngtemplates","           * \\copy","           * \\concat:basic","           * \\concat:extra","           * \\shell:start","           * \\clean","           ...","        options:","          spawn: no","          livereload: no","    clean:","      build:","        src: [\\client/js/app_templates.js]","    open:","      dev:","        path: 'http://127.0.0.1:80'","        app: 'google-chrome'","    xonom:","      options:","        input:","          controllers: files.live.map(key).filter (.index-of(\\api.server.js) > -1)","        output:","           angular-service: \\.compiled/xonom.service.js","           express-route: \\.compiled/xonom.route.js","    shell:","        start:","          command: 'killall -9 node; cd .compiled; forever stop server.js; forever start server.js'","        node:","          command: 'killall -9 node; node .compiled/server.js'","    newer:","      options:","        cache: \\.cache","  const npm-tasks =","    * load: \\bower-task","      register: \\bower","      configs: [\\default]","    * load: \\bower-concat","      register: \\bower_concat","      configs: [\\default]","    * load: \\ts","      register: \\ts","      configs: []","    * load: \\livescript","      register: \\livescript","      configs:","         * \\default","         * \\dist","         * \\debug","    * load: \\contrib-coffee","      register: \\coffee","      configs: [\\default]","    * load: \\contrib-jade","      register: \\jade","      configs:","        * \\default","        * \\dist","        * \\debug","    * load: \\ng-constant","      register: \\ngconstant","      configs:","        * \\dist","        ...","    * load: \\angular-templates","      register: \\ngtemplates","      configs: ","        * \\default","        * \\dist","        * \\debug","    * load: \\contrib-sass","      register: \\sass:no_options","      configs: ","        * \\default","        * \\dist","        * \\debug","    * load: \\contrib-copy","      register: \\copy","      configs: ","        * \\default","        * \\debug","        ...","    * load: \\xonom","      register: \\xonom","      configs:","        * \\default","        * \\debug","        ...","    * load: \\ng-annotate","      register: \\ngAnnotate","      configs:","        * \\default","        * \\debug","        ...","    * load: \\contrib-concat","      register: \\concat","      configs:","        * \\default","        * \\debug","        ...","    * load: \\contrib-uglify","      register: \\uglify","      configs: []","    * load: \\yui-compressor","      register: \\min","      configs: []","    * load: \\shell","      register: \\shell:start","      configs: [\\default]","    * load: \\shell","      register: \\shell:node","      configs: [\\debug]","    * load: \\aws-s3","      register: \\aws_s3","      configs: [\\dist]","    * load: \\contrib-clean","      register: \\clean","      configs:","         * \\default","         * \\debug","         * ...","    * load: \\open","      register: \\open","      configs: ","        []","        ...","    * load: \\contrib-watch","      register: \\watch","      configs:","         * \\default","         ...","  for task in npm-tasks","    grunt.load-npm-tasks \"grunt-#{task.load}\"","  const load = (name)->","    grunt.register-task do","      * name","      * npm-tasks.filter(-> it.configs.index-of(name) > -1).map(-> it.register)","  ","  grunt.load-npm-tasks('grunt-newer')","  ","  load \\default","  load \\debug",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":321,"column":13},"action":"insert","lines":["module.exports = (grunt)->","  convert-mapping = (file)->","      \".compiled/#{file.dest}\": file.src.0","  make-pair = (from, to)->","    grunt.file.expand-mapping([\"app/components/**/*#from\", \"./*#from\", \"app/*#from\"], \"\", {ext: to, extDot: 'last'  }).map(convert-mapping)","  ","  mapping = ","    * to: \\.js","      from: [\\.ls, \\.coffee, \\.ts, \\.js]","    * to: \\.css","      from: [\\.css, \\sass]","    * to: \\.html","      from: [\\.html, \\.jade]","  ","  key = (o)->","      Object.keys(o).0","      ","  get-compiled = (to)->","    (mapping.filter(-> it.to is to)).0.from.map( (from)->  make-pair(from, to).map(key) ).reduce( (a,b)-> a.concat(b)).map(-> __dirname + \\/ +  it )","  ","  ","  ","  ","  require(\\time-grunt) grunt","  load-module-first = (x)->","      | Object.keys(x).0.index-of('module') > -1 => -1","      | _ => 0","  separate = (arr, return-mods)->","       arr.filter(-> (Object.keys(it).0.index-of(\\module) >  -1) is return-mods)","  live = ","      make-pair(\\.ls,\\.js)","  live-modules = ","      separate live, yes","  live-other =","      separate live, no","  coffee = ","      make-pair(\\.coffee,\\.js)","  ts = ","      make-pair(\\.ts,\\.js)","  coffee-modules = ","      separate coffee, yes","  coffee-other =","      separate coffee, no","  ","  ts-modules = ","      separate ts, yes","  ts-other =","      separate ts, no","  ","  ","  files = ","    live: live-modules ++ live-other","    coffee: coffee-modules ++ coffee-other","    ts: ts-modules ++  ts-other","    jade: make-pair \\.jade, \\.html","    sass: make-pair \\.sass, \\.css","     ","  console.log(\"html\",get-compiled('.html').filter(-> it.index-of(\\app/index) is -1)  )","  path = do","    js = -> \"client/js/#it\"","    app: js \\app.js","    app-style: \\.compiled/app/index.css","    app-module: \\.compiled/app/index.js","    templates: js \\app_templates.js","  grunt.init-config do","    sass:","      no_options:","        files:","          files.sass","    jade:","      html:","        files: files.jade","        options:","          client: no","          wrap: no","          node: no","          runtime: no","    ngAnnotate:","      options:","         single-quotes: yes","      app1:","         files: get-compiled('.js').filter(-> it.index-of(\\client.js) > -1).map(-> \"#it\": [it])","    ngtemplates:","      app:","        src: \"app/components/**/*.html\"","        dest: path.templates","        options:","          url: (url) ->","            url.replace \\.html, ''","               .replace /.+\\//i, ''","          bootstrap: (module, script)->","            \"angular.module('app').run(['$templateCache',function($templateCache) { #{script} }])\"","    ts:","       options:","        bare: yes","       src: files.ts","    livescript:","       options:","        bare: yes","       src:","        files: files.live","    coffee:","       options:","        bare: yes","       src:","        files: files.coffee","    bower:","      install: {}","    bower_concat:","      all:","        dest: \\lib/_bower.js","        cssDest: \\lib/_bower.css","        dependencies: {}","        bowerOptions:","          relative: false","    concat:","      basic:","        src: ","            staf =","                * \\lib/_bower.js","                * path.app-module","                * \\.compiled/xonom.service.js","                * path.templates","            js =","                get-compiled(\".js\").filter(-> it.index-of(\\client.js) > -1)","            staf ++ js","        dest: path.app","        options:","          banner: \"(function( window ){ \\n 'use strict';\"","          footer: \"}( window ));\"","      extra:","        src: do","          const bower = ","            * \\lib/_bower.css","            ...","          const app = ","            get-compiled(\".css\")","          bower ++ app","        dest: \\client/css/app.css","    min :","      dist : ","        src : [\\client/js/app.js]","        dest: \\client/js/app.js","    copy:","      main:","        files:","          * expand: no","            src: [\\.compiled/app/index.html]","            dest: \\client/index.html","          * expand: yes","            cwd: ''","            src: \\app/components/**/*.js","            dest: \\.compiled","            flatten: no","            filter: \\isFile","          * expand: yes","            cwd: ''","            src: \\app/components/**/*.css","            dest: \\.compiled","            flatten: no","            filter: \\isFile","          * expand: yes","            cwd: ''","            src: \\app/components/**/*.html","            dest: \\.compiled","            flatten: no","            filter: \\isFile","    removelogging:","      dist:","        src: \"js/application.js\"","        dest: \"js/application-clean.js\"","    watch:","      scripts:","        files: ","          * \\app/**/*.*","          ...","        tasks: ","           * \\newer:sass","           * \\newer:jade","           * \\newer:livescript","           * \\newer:coffee","           * \\xonom","           * \\copy","           * \\ngtemplates","           * \\concat:basic","           * \\concat:extra","           * \\shell:start","           * \\clean","           ...","        options:","          spawn: no","          livereload: no","    clean:","      build:","        src: [\\client/js/app_templates.js]","    open:","      dev:","        path: 'http://127.0.0.1:80'","        app: 'google-chrome'","    xonom:","      options:","        input:","          controllers: get-compiled(\".js\").filter (.index-of(\\api.server.js) > -1)","        output:","           angular-service: \\.compiled/xonom.service.js","           express-route: \\.compiled/xonom.route.js","    shell:","        start:","          command: 'killall -9 node; cd .compiled; forever stop server.js; forever start server.js'","        node:","          command: 'killall -9 node; node .compiled/server.js'","    newer:","      options:","        cache: \\.cache","  const npm-tasks =","    * load: \\bower-task","      register: \\bower","      configs: [\\default]","    * load: \\bower-concat","      register: \\bower_concat","      configs: [\\default]","    * load: \\ts","      register: \\ts","      configs: []","    * load: \\livescript","      register: \\livescript","      configs:","         * \\default","         * \\dist","         * \\debug","    * load: \\contrib-coffee","      register: \\coffee","      configs: [\\default]","    * load: \\contrib-jade","      register: \\jade","      configs:","        * \\default","        * \\dist","        * \\debug","    * load: \\ng-constant","      register: \\ngconstant","      configs:","        * \\dist","        ...","    * load: \\angular-templates","      register: \\ngtemplates","      configs: ","        * \\default","        * \\dist","        * \\debug","    * load: \\contrib-sass","      register: \\sass:no_options","      configs: ","        * \\default","        * \\dist","        * \\debug","    * load: \\contrib-copy","      register: \\copy","      configs: ","        * \\default","        * \\debug","        ...","    * load: \\xonom","      register: \\xonom","      configs:","        * \\default","        * \\debug","        ...","    * load: \\ng-annotate","      register: \\ngAnnotate","      configs:","        * \\default","        * \\debug","        ...","    * load: \\contrib-concat","      register: \\concat","      configs:","        * \\default","        * \\debug","        ...","    * load: \\contrib-uglify","      register: \\uglify","      configs: []","    * load: \\yui-compressor","      register: \\min","      configs: []","    * load: \\shell","      register: \\shell:start","      configs: [\\default]","    * load: \\shell","      register: \\shell:node","      configs: [\\debug]","    * load: \\aws-s3","      register: \\aws_s3","      configs: [\\dist]","    * load: \\contrib-clean","      register: \\clean","      configs:","         * \\default","         * \\debug","         * ...","    * load: \\open","      register: \\open","      configs: ","        []","        ...","    * load: \\contrib-watch","      register: \\watch","      configs:","         * \\default","         ...","  for task in npm-tasks","    grunt.load-npm-tasks \"grunt-#{task.load}\"","  const load = (name)->","    grunt.register-task do","      * name","      * npm-tasks.filter(-> it.configs.index-of(name) > -1).map(-> it.register)","  ","  grunt.load-npm-tasks('grunt-newer')","  ","  load \\default","  load \\debug"]}],[{"start":{"row":84,"column":14},"end":{"row":84,"column":15},"action":"insert","lines":["."],"id":3}],[{"start":{"row":84,"column":15},"end":{"row":84,"column":16},"action":"insert","lines":["c"],"id":4}],[{"start":{"row":84,"column":16},"end":{"row":84,"column":17},"action":"insert","lines":["o"],"id":5}],[{"start":{"row":84,"column":17},"end":{"row":84,"column":18},"action":"insert","lines":["m"],"id":6}],[{"start":{"row":84,"column":15},"end":{"row":84,"column":18},"action":"remove","lines":["com"],"id":7},{"start":{"row":84,"column":15},"end":{"row":84,"column":23},"action":"insert","lines":["compiled"]}],[{"start":{"row":84,"column":23},"end":{"row":84,"column":24},"action":"insert","lines":["/"],"id":8}]]},"ace":{"folds":[],"scrolltop":3594.5,"scrollleft":0,"selection":{"start":{"row":84,"column":24},"end":{"row":84,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":170,"state":"key","mode":"ace/mode/livescript"}},"timestamp":1438680541254,"hash":"f7c8c33a461ab10763c9e0f80c3cf460fd64e2ca"}